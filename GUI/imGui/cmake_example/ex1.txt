cmake_minimum_required(VERSION 3.0)
project(MyIMGUIProject)

# if(NOT CMAKE_BUILD_TYPE)
#   set(CMAKE_BUILD_TYPE Debug CACHE STRING "" FORCE)
# endif()

set(CMAKE_CXX_STANDARD 11)
# set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DVK_PROTOTYPES")
# set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DVK_PROTOTYPES")

set(SOURCES
    main.cpp
)

set(IMGUI_SOURCES
    imgui/imgui.cpp
    imgui/imgui_demo.cpp
    imgui/imgui_draw.cpp
    imgui/imgui_widgets.cpp
)

set(BACKEND_SOURCES
  imgui/backends/imgui_impl_glfw.cpp
  imgui/backends/imgui_impl_opengl3.cpp
)

# Dear ImGui
# set(IMGUI_DIR imgui)
# include_directories(${IMGUI_DIR} ${IMGUI_DIR}/backends ..)

# Libraries
# find_package(Vulkan REQUIRED)
#find_library(VULKAN_LIBRARY
  #NAMES vulkan vulkan-1)
#set(LIBRARIES "glfw;${VULKAN_LIBRARY}")
# set(LIBRARIES "glfw;Vulkan::Vulkan")

# pkg-config --static --libs glfw3
# -lglfw -lrt -lm -ldl


find_package(glfw3 REQUIRED CONFIG)
find_package(OpenGL REQUIRED)
set(OpenGL_GL_PREFERENCE "GLVND")


# set(LIBRARIES "GL;glfw;rt;m;dl")
set(LIBRARIES "GL"
glfw
dl
OpenGL::GL
    OpenGL::GLX

  )

add_executable(MyIMGUIApp ${SOURCES} ${IMGUI_SOURCES} ${BACKEND_SOURCES})
target_include_directories(MyIMGUIApp PRIVATE imgui)  # Include the IMGUI headers
target_include_directories(MyIMGUIApp PRIVATE imgui/backends)  # Include the IMGUI headers
target_link_libraries(MyIMGUIApp ${LIBRARIES})

# Add any required dependencies here
# target_link_libraries(MyIMGUIApp PRIVATE ${CONAN_LIBS})  # Example for using Conan package manager

# add_executable(example_glfw_vulkan ${sources} ${IMGUI_DIR}/backends/imgui_impl_glfw.cpp ${IMGUI_DIR}/backends/imgui_impl_vulkan.cpp ${IMGUI_DIR}/imgui.cpp ${IMGUI_DIR}/imgui_draw.cpp ${IMGUI_DIR}/imgui_demo.cpp ${IMGUI_DIR}/imgui_tables.cpp ${IMGUI_DIR}/imgui_widgets.cpp)
# target_link_libraries(example_glfw_vulkan ${LIBRARIES})
# target_compile_definitions(example_glfw_vulkan PUBLIC -DImTextureID=ImU64)
